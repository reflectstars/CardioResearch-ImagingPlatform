name: CemrgApp Build & Deploy

on:
  release:
    types: [published]

jobs:
  Variables:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.vars.outputs.tag }}
      sha: ${{ steps.vars.outputs.sha }}
    steps:
    - name: Prepare variables
      id: vars
      run: |
        echo ::set-output name=tag::${GITHUB_REF#refs/tags/}
        echo ::set-output name=sha::${GITHUB_SHA::7}


  Create-Release:
    runs-on: ubuntu-latest
    needs: [Variables, Build-Linux, Build-Windows, Build-macOS]
    steps:
    - name: Download packages
      uses: actions/download-artifact@v2
      with:
        name: Packages

    - name: Upload Linux package
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: CemrgApp-Linux.zip
        asset_name: CemrgApp-Linux-${{ needs.Variables.outputs.tag }}.zip
        asset_content_type: application/zip

    - name: Upload Windows package
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: CemrgApp-Windows.zip
        asset_name: CemrgApp-Windows-${{ needs.Variables.outputs.tag }}.zip
        asset_content_type: application/zip

    - name: Upload macOS package
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: CemrgApp-macOS.dmg
        asset_name: CemrgApp-macOS-${{ needs.Variables.outputs.tag }}.dmg
        asset_content_type: application/octet-stream


  Build-Linux:
    runs-on: ubuntu-18.04
    needs: [Variables]
    steps:
    - name: Download precompiled Build folder
      run: |
        wget -q -O Build.zip https://emckclac-my.sharepoint.com/:u:/g/personal/k2143219_kcl_ac_uk/EU8n4C0PlPxDgLk6PFrprY8B4KwiDaYotmur5m0q3px81w?download=1
        7z x Build.zip
        rm Build.zip
        sudo mv Build /
    
    - name: Download external libraries
      run: |
        wget -q -O Externals.zip https://emckclac-my.sharepoint.com/:u:/g/personal/k2143219_kcl_ac_uk/EX8zGabE-ctDoBnde6ntHR0Bx_1wYis_ql26aAzMoedMzg?download=1
        7z x Externals.zip
        rm Externals.zip
        sudo mv Externals /
      
    - name: Install missing packages
      run: |
        sudo apt update
        sudo DEBIAN_FRONTEND=noninteractive apt install libxt-dev libtiff5-dev libfontconfig1 mesa-common-dev libglu1-mesa-dev libxcomposite1 libxcursor1 libxrender1 libxi6 libxtst6 libasound2 libnspr4 libnss3 libxkbcommon-dev libxkbcommon-x11-dev doxygen git cmake python3-pip gcc-6 g++-6 -y
        sudo apt remove --auto-remove icu-devtools libicu-dev -y
    
    - name: Ins