name: CemrgApp Build & Deploy

on:
  release:
    types: [published]

jobs:
  Variables:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.vars.outputs.tag }}
      sha: ${{ steps.vars.outputs.sha }}
    steps:
    - name: Prepare variables
      id: vars
      run: |
        echo ::set-output name=tag::${GITHUB_REF#refs/tags/}
        echo ::set-output name=sha::${GITHUB_SHA::7}


  Create-Release:
    runs-on: ubuntu-latest
    needs: [Variables, Build-Linux, Build-Windows, Build-macOS]
    steps:
    - name: Download packages
      uses: actions/download-artifact@v2
      with:
        name: Packages

    - name: Upload Linux package
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: CemrgApp-Linux.zip
        asset_name: CemrgApp-Linux-${{ needs.Variables.outputs.tag }}.zip
        asset_content_type: application/zip

    - name: Upload Windows package
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: CemrgApp-Windows.zip
        asset_name: CemrgApp-Windows-${{ needs.Variables.outputs.tag }}.zip
        asset_content_type: application/zip

    - name: Upload macOS package
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: CemrgApp-macOS.dmg
        asset_name: CemrgApp-macOS-${{ needs.Variables.outputs.tag }}.dmg
        asset_content_type: application/octet-stream


  Build-Linux:
    runs-on: ubuntu-18.04
    needs: [Variables]
    steps:
    - name: Download precompiled Build folder
      run: |
        wget -q -O Build.zip https://emckclac-my.sharepoint.com/:u:/g/personal/k2143219_kcl_ac_uk/EU8n4C0PlPxDgLk6PFrprY8B4KwiDaYotmur5m0q3px81w?download=1
        7z x Build.zip
        rm Build.zip
        sudo mv Build /
    
    - name: Download external libraries
      run: |
        wget -q -O Externals.zip https://emckclac-my.sharepoint.com/:u:/g/personal/k2143219_kcl_ac_uk/EX8zGabE-ctDoBnde6ntHR0Bx_1wYis_ql26aAzMoedMzg?download=1
        7z x Externals.zip
        rm Externals.zip
        sudo mv Externals /
      
    - name: Install missing packages
      run: |
        sudo apt update
        sudo DEBIAN_FRONTEND=noninteractive apt install libxt-dev libtiff5-dev libfontconfig1 mesa-common-dev libglu1-mesa-dev libxcomposite1 libxcursor1 libxrender1 libxi6 libxtst6 libasound2 libnspr4 libnss3 libxkbcommon-dev libxkbcommon-x11-dev doxygen git cmake python3-pip gcc-6 g++-6 -y
        sudo apt remove --auto-remove icu-devtools libicu-dev -y
    
    - name: Install Qt
      run: |
        sudo pip3 install --upgrade setuptools
        sudo pip3 install aqtinstall
        sudo aqt install --outputdir /Qt 5.12.10 linux desktop -m qtcharts qtnetworkauth qtpurchasing qtdatavis3d qtscript qtvirtualkeyboard qtwebengine qtwebglplugin
    
    - name: Clone MITK
      run: sudo git clone --branch v2018.04.2 https://phabricator.mitk.org/source/mitk.git /MITK
    
    - name: Change timestamps of MITK directory
      run: sudo find /MITK/ -exec touch -a -m -d 20210401 {} \;

    - name: Clone CemrgApp
      uses: actions/checkout@v2
      with:
        path: CemrgApp

    - name: Move CemrgApp to root
      run: sudo mv CemrgApp /

    - name: Update the CemrgApp version
      working-directory: /CemrgApp
      run: |
        sudo rm CemrgApp/Applications/MainApp/version.txt
        sudo echo ${{ needs.Variables.outputs.tag }} >> CemrgApp/Applications/MainApp/version.txt
        sudo echo ${{ needs.Variables.outputs.sha }} >> CemrgApp/Applications/MainApp/version.txt

    - name: Build
      working-directory: /Build
      run: make -j4

    - name: Package
      working-directory: /Build/MITK-build
      run: |
        make package -j4
        cd _CPack_Packages/Linux/TGZ
        mv MITK-v2018.04.2-linux-x86_64 CemrgApp-Linux
        rm CemrgApp-Linux/Mitk*
        rm CemrgApp-Linux/bin/MitkWorkbench*
        mv /Externals/* CemrgApp-Linux/bin/
        mv /CemrgApp/README.md CemrgApp-Linux/
        7z a CemrgApp-Linux.zip CemrgApp-Linux
        mv CemrgApp-Linux.zip ${{ github.workspace }}/

    - name: Upload package
      uses: actions/upload-artifact@v2
      with:
        name: Packages
        path: CemrgApp-Linux.zip


  Build-Windows:
    runs-on: windows-2016
    needs: [Variables]
    steps:
    - name: Uninstall NSIS
      run: |
        & 'C:/Program Files (x86)/NSIS/uninst-nsis.exe' /S
      
    - name: Download precompiled Build folder
      working-directory: c:\
      run: |
        c:\msys64\usr\bin\wget.exe -q -O Build.zip https://emckclac-my.sharepoint.com/:u:/g/personal/k2143219_kcl_ac_uk/EUFa_AWPBI1OnnQwXA_ilu8Bq38U6OjiR4XKDcxDKo5wnw?download=1
        7z x Build.zip
        del Build.zip

    - name: Download external libraries
      working-directory: c:\
      run: |
        c:\msys64\usr\bin\wget.exe -q -O Externals.zip https://emckclac-my.sharepoint.com/:u:/g/personal/k2143219_kcl_ac_uk/Ea8urj-xMS5CoEnt3lS-A9QBLoAi1EXfP3lM26MRn11OrA?download=1
        7z x Externals.zip
        del Externals.zip
    
    - name: Install Qt
      working-directory: c:\
      run: |
        pip install aqtinstall
        mkdir Qt
        python -m aqt install --outputdir Qt 5.12.10 windows desktop win64_msvc2017_64 -m qtcharts qtnetworkauth qtpurchasing qtdatavis3d qtscript qtvirtualkeyboard qtwebengine qtwebglplugin
    
    - name: Clone MITK
      run: git clone --branch v2018.04.2 https://phabricator.mitk.org/source/mitk.git c:\MITK
    
    - name: Change timestamps of MITK directory
      run: dir -R c:\MITK | foreach { $_.LastWriteTime = [DateTime]::ParseExact('01-04-21', 'dd-MM-yy', $null) }
    
    - name: Clone CemrgApp
      uses: actions/checkout@v2
      with:
        path: CemrgApp
    
    - name: Copy CemrgApp to root
      shell: cmd
      run: |
        mkdir c:\CemrgApp
        xcopy /e .\CemrgApp\* c:\CemrgApp\
        rd /s /q CemrgApp

    - name: Update the CemrgApp version
      working-directory: c:\CemrgApp
      shell: powershell
      run: |
        rm CemrgApp/Applications/MainApp/version.txt
        echo ${{ needs.Variables.outputs.tag }} >> CemrgApp/Applications/MainApp/version.txt
        echo ${{ needs.Variables.outputs.sha }} >> CemrgApp/Applications/MainApp/version.txt

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Build
      working-directory: c:\Build
      run: MSBuild MITK-superbuild.sln /p:Configuration=Release /p:Platform=x64 -m:4

    - name: Package
      working-directory: c:\Build\MITK-build
      run: |
        MSBuild PACKAGE.vcxproj /p:Configuration=Release /p:Platform=x64 -m:4
        cd _CPack_Packages\win64\ZIP
        ren MITK-v2018.04.2-windows-x86_64 CemrgApp-Windows
        xcopy /e c:\Externals\* .\CemrgApp-Windows\bin\
        copy c:\CemrgApp\README.md .\CemrgApp-Windows\
        del CemrgApp-Windows\bin\MitkWorkbench.*
        7z a CemrgApp-Windows.zip CemrgApp-Windows
        move CemrgApp-Windows.zip ${{ github.workspace }}\

    - name: Upload package
      uses: actions/upload-artifact@v2
      with:
        name: Packages
        path: CemrgApp-Windows.zip
  

  Build-macOS:
    runs-on: macos-10.15
    needs: [Variables]
    steps:
    - name: Download precompiled Build folder
      working-directory: /Users/Shared
      run: |
        wget -q -O Build.zip https://emckclac-my.sharepoint.com/:u:/g/personal/k2143219_kcl_ac_uk/EVzkObB3qiZLpEQsCLB3pdcBjaGDuzLapXFvujnDP_xr1A?download=1
        7z x Build.zip
        rm Build.zip

    - name: Download external libraries
      working-directory: /Users/Shared
      run: |
        wget -q -O Externals.zip https://emckclac-my.sharepoint.com/:u:/g/personal/k2143219_kcl_ac_uk/EZh5YUHzdyNEu_m0ZwTfaYUBZBil9eIqLrmJw8lDWQSLag?download=1
        7z x Externals.zip
        rm Externals.zip

    - name: Download patch for MITK
      working-directory: /Users/Shared
      run: |
        wget -q -O Patch.zip https://emckclac-my.sharepoint.com/:u:/g/personal/k2143219_kcl_ac_uk/EQ5LKrqH_fZNt9eGA7RBcC4B9YyyF0SwFeo9hIm9zkqLTQ?download=1
        7z x Patch.zip
        rm Patch.zip

    - name: Install missing packages
      run: brew install gmp doxygen llvm@9

    - name: Install Qt
      working-directory: /Users/Shared
      run: |
        pip3 install aqtinstall --user
        mkdir Qt
        python3 -m aqt install --outputdir Qt 5.12.10 mac desktop -m qtcharts qtnetworkauth qtpurchasing qtdatavis3d qtscript qtvirtualkeyboard qtwebengine qtwebglplugin

    - name: Clone MITK
      run: git clone --branch v2018.04.2 https://phabricator.mitk.org/source/mitk.git /Users/Shared/MITK
      
    - name: Patch MITK
      working-directory: /Users/Shared
      run: |
        cp Patch/usServiceListeners.cpp MITK/Modules/CppMicroServices/core/src/service/usServiceListeners.cpp
        cp Patch/usListenerFunctors_p.h MITK/Modules/CppMicroServices